buildscript {
    repositories {
        mavenLocal()
        maven { url ossimMavenProxy }
    }
    dependencies {
        classpath 'io.ossim:gradleDefaults:1.8-RELEASE'
    }
}

/*
plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
  id "org.sonarqube" version "2.6.2"
}
*/

apply plugin: 'groovy'
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"

group "io.ossim.omar.apps"

repositories {
    mavenLocal()
    maven { url ossimMavenProxy }
}

io.ossim.gradleDefaults.Variables.setAdditionalVariables(project)
io.ossim.gradleDefaults.Variables.setVersionVariables(project)
dockerBuildDir="${rootProject.projectDir}/docker"
version "${buildVersion}-${buildVersionTag}"
jarDestination = "${projectDir}/build/libs/${project.name}-${version}.jar"
io.ossim.gradleDefaults.Docker.addDockerTasks(project, dockerRegistryUrl, dockerRegistryUsername, dockerRegistryPassword, name, dockerImageTag, dockerBuildDir, jarDestination, ["BASE_IMAGE": "${dockerRegistryUrl}/${dockerBaseImage}:${dockerFromTag}"])
io.ossim.gradleDefaults.Publications.addPublication(project, groupName, project.name, "${buildVersion}-${buildVersionTag}")
io.ossim.gradleDefaults.Publications.addRepository(project, mavenPublishUrl, mavenRepoUsername, mavenRepoPassword)
io.ossim.gradleDefaults.Openshift.addOpenshiftTasks(project, openshiftUrl, openshiftUsername, openshiftPassword, openshiftProjectName, openshiftServiceName,  dockerRegistryUrl, name, dockerImageTag)

dependencies {
    compile 'io.ossim.omar.plugins:omar-core-plugin:+'
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile 'org.postgresql:postgresql:9.4-1205-jdbc42'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
