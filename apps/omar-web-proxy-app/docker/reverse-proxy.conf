##################################
# o2 Openshift Proxy configurations
##################################

ProxyPreserveHost On

#Redirect /isa-ui /isa-ui/
#ProxyPass /isa-ui/ http://isa-app:8080/isa-ui/
#ProxyPassReverse /isa-ui/ http://isa-app:8080/isa-ui/

Redirect /ngt-service /ngt-service/
ProxyPass /ngt-service/ http://ngt-service:8080/ngt-service/
ProxyPassReverse /ngt-service/ http://ngt-service:8080/ngt-service/


Redirect /oldmar-app /oldmar-app/
ProxyPass /oldmar-app/ http://oldmar-app:8080/oldmar-app/
ProxyPassReverse /oldmar-app/ http://oldmar-app:8080/oldmar-app/

Redirect /omar-avro /omar-avro/
ProxyPass /omar-avro/ http://omar-avro-app:8080/omar-avro/
ProxyPassReverse /omar-avro/ http://omar-avro-app:8080/omar-avro/

Redirect /omar-cesium-terrain-builder /omar-cesium-terrain-builder/
ProxyPass /omar-cesium-terrain-builder/ http://omar-cesium-terrain-buil:8080/omar-cesium-terrain-builder/
ProxyPassReverse /omar-cesium-terrain-builder/ http://omar-cesium-terrain-buil:8080/omar-cesium-terrain-builder/

Redirect /omar-cesium-terrain-server /omar-cesium-terrain-server/
ProxyPass /omar-cesium-terrain-server/ http://omar-cesium-terrain-serv:8000/
ProxyPassReverse /omar-cesium-terrain-server/ http://omar-cesium-terrain-serv:8000/

Redirect /omar-docs /omar-docs/
ProxyPass /omar-docs/ http://omar-docs-app:80/omar-docs/
ProxyPassReverse /omar-docs/ http://omar-docs-app:80/omar-docs/

Redirect /omar-download /omar-download/
ProxyPass /omar-download/ http://omar-download-app:8080/omar-download/
ProxyPassReverse /omar-download/ http://omar-download-app:8080/omar-download/

Redirect /omar-dropbox-sqs /omar-dropbox-sqs/
ProxyPass /omar-dropbox-sqs/ http://omar-dropbox-sqs-app:8080/omar-dropbox-sqs/
ProxyPassReverse /omar-dropbox-sqs/ http://omar-dropbox-sqs-app:8080/omar-dropbox-sqs/

Redirect /omar-geoscript /omar-geoscript/
ProxyPass /omar-geoscript/ http://omar-geoscript-app:8080/omar-geoscript/
ProxyPassReverse /omar-geoscript/ http://omar-geoscript-app:8080/omar-geoscript/

Redirect /omar-git-mirror /omar-git-mirror/
ProxyPass /omar-git-mirror/ http://omar-git-mirror-app:8080/omar-git-mirror/
ProxyPassReverse /omar-git-mirror/ http://omar-git-mirror-app:8080/omar-git-mirror/

Redirect /omar-jpip /omar-jpip/
ProxyPass /omar-jpip/ http://omar-jpip-app:8080/omar-jpip/
ProxyPassReverse /omar-jpip/ http://omar-jpip-app:8080/omar-jpip/

Redirect /omar-mensa /omar-mensa/
ProxyPass /omar-mensa/ http://omar-mensa-app:8080/omar-mensa/
ProxyPassReverse /omar-mensa/ http://omar-mensa-app:8080/omar-mensa/

RedirectMatch ^/$ /omar-ui/omar#/map
Redirect /omar-ui /omar-ui/
ProxyPass /omar-ui/ http://omar-ui-app:8080/omar-ui/
ProxyPassReverse /omar-ui/ http://omar-ui-app:8080/omar-ui/

Redirect /omar-sqs /omar-sqs/
ProxyPass /omar-sqs/ http://omar-sqs-app:8080/omar-sqs/
ProxyPassReverse /omar-sqs/ http://omar-sqs-app:8080/omar-sqs/

Redirect /omar-stager /omar-stager/
ProxyPass /omar-stager/ http://omar-stager-app:8080/omar-stager/
ProxyPassReverse /omar-stager/ http://omar-stager-app:8080/omar-stager/

Redirect /omar-superoverlay /omar-superoverlay/
ProxyPass /omar-superoverlay/ http://omar-superoverlay-app:8080/omar-superoverlay/
ProxyPassReverse /omar-superoverlay/ http://omar-superoverlay-app:8080/omar-superoverlay/

Redirect /omar-wcs /omar-wcs/
ProxyPass /omar-wcs/ http://omar-wcs-app:8080/omar-wcs/
ProxyPassReverse /omar-wcs/ http://omar-wcs-app/omar-wcs/

Redirect /omar-wfs /omar-wfs/
ProxyPass /omar-wfs/ http://omar-wfs-app:8080/omar-wfs/
ProxyPassReverse /omar-wfs/ http://omar-wfs-app:8080/omar-wfs/

Redirect /omar-wms /omar-wms/
ProxyPass /omar-wms/ http://omar-wms-app:8080/omar-wms/
ProxyPassReverse /omar-wms/ http://omar-wms-app:8080/omar-wms/

Redirect /omar-oms /omar-oms/
ProxyPass /omar-oms/ http://omar-oms-app:8080/omar-oms/
ProxyPassReverse /omar-oms/ http://omar-oms-app:8080/omar-oms/

Redirect /omar-wmts /omar-wmts/
ProxyPass /omar-wmts/ http://omar-wmts-app:8080/omar-wmts/
ProxyPassReverse /omar-wmts/ http://omar-wmts-app:8080/omar-wmts/

Redirect /service-proxy /service-proxy/
ProxyPass /service-proxy/ http://omar-service-proxy-app:8080/service-proxy/
ProxyPassReverse /service-proxy/ http://omar-service-proxy-app:8080/service-proxy/

Redirect /tlv /tlv/
ProxyPass /tlv/ http://tlv-app:8080/tlv/
ProxyPassReverse /tlv/ http://tlv-app:8080/tlv/

Redirect /twofishes /twofishes/
ProxyPass /twofishes/ http://omar-twofishes:8081/
ProxyPassReverse /twofishes/ http://omar-twofishes:8081/

Redirect /omar-avro-metadata /omar-avro-metadata/
ProxyPass /omar-avro-metadata/ http://omar-avro-metadata-app:8080/omar-avro-metadata/
ProxyPassReverse /omar-avro-metadata/ http://omar-avro-metadata-app:8080/omar-avro-metadata/

Redirect /o2-mapproxy /o2-mapproxy/
ProxyPass /o2-mapproxy/ http://o2-mapproxy:8080/
ProxyPassReverse /o2-mapproxy/ http://o2-mapproxy:8080/

Redirect /omar-mapproxy /omar-mapproxy/
ProxyPass /omar-mapproxy/ http://omar-mapproxy:8080/
ProxyPassReverse /omar-mapproxy/ http://omar-mapproxy:8080/

#######################################
# o2 Openshift VirtualHost configuration
#######################################
<VirtualHost _default_:443>
  SSLEngine ON
  
  LogFormat "{\"timestamp\": \"%{%d/%b/%Y %T}t.%{msec_frac}t %{%z}t\", \"user\": \"\"%{SSL_CLIENT_S_DN_CN}x\"\", \"email\": \"%{SSL_CLIENT_S_DN_Email}x\" \"ssl_dump\": \"%{SSL_CLIENT_S_DN}x\", \"response_time\": \"%{ms}T\", \"status\": \"%s\", \"request\": \"%U%q\", \"method\": \"%m\", \"protocol\": \"%H\" }" json_format
  CustomLog logs/ssl_access_log json_format
  
  SSLCertificateFile /etc/ssl/server-certs/server.pem
  SSLCertificateKeyFile /etc/ssl/server-certs/server.key

  SSLCACertificateFile /etc/ssl/server-certs/ca.crt

  SSLVerifyClient none
  SSLVerifyDepth 10

</VirtualHost>

#######################################
# o2 Openshift CORS configuration
#######################################

# Allow these headers to vary in caches
Header always append Vary Access-Control-Allow-Credentials
Header always append Vary Access-Control-Allow-Methods
Header always append Vary Access-Control-Allow-Headers
Header always append Vary Access-Control-Allow-Origin
Header always append Vary Access-Control-Max-Age

# Uncomment for PKI proxies
#
#RequestHeader set USERNAME "%{SSL_CLIENT_S_DN_CN}s"
#RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
#RequestHeader set SSL_CLIENT_S_CN "%{SSL_CLIENT_S_DN_CN}s"

# Inform the client CORS headers will vary based on the provided Origin
Header always append Vary Origin

# For proxypass
Header always unset Access-Control-Allow-Credentials
Header always unset Access-Control-Allow-Origin

# Header always set Access-Control-Allow-Credentials true
Header set Access-Control-Allow-Credentials true

# This is a pretty standard set, update as needed for custom requests
Header always set Access-Control-Allow-Methods "GET, PUT, POST, DELETE, OPTIONS, CANCELUPLOAD"
Header always set Access-Control-Allow-Headers "Accept, Overwrite, Destination, Content-Type, Cache-Control, Origin, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name"

# This grabs the origin from the request headers and echoes it in the Allow-Origin header
# so we can support all origins without a wildcard

SetEnvIfNoCase Origin (.*) origin=$1
# Header always set Access-Control-Allow-Origin "%{origin}e"
Header set Access-Control-Allow-Origin "%{origin}e"

# This should be pretty short in the event that the user submits a cross-origin request
# from two separate origins over a short period of time. If the browser denying these
# within a short period is not acceptable, see the commented block below.
# Header always set Access-Control-Max-Age 30

# The following conditions are here to satisfy not responding to older http requests (per NESSUS 1.5.9)
RewriteEngine on
RewriteCond %{THE_REQUEST} !HTTP/1\.1$
RewriteRule .* - [F]
# Add these rewrite directives before any ProxyPass or ProxyPassReverse load balancing directives
# so the pre-flight request does not go to the balancer handler.
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteCond %{HTTP:Origin} !=""
RewriteRule ^(.*)$ $1 [R=200,L,E=HTTP_ORIGIN:%{HTTP:Origin}]

# Allow browsers to access additional response headers for cross-domain requests.
Header always set Access-Control-Expose-Headers "Content-Disposition"
